{
    "compilerOptions": {
        "outDir": "bin",
        "target": "es2016",
        "module": "commonjs",
        "moduleResolution": "node",
        "declaration": true,
        "sourceMap": true,
        "stripInternal": true,
        "experimentalDecorators": true,
        "noFallthroughCasesInSwitch": true,
        "forceConsistentCasingInFileNames": true,
        "strict": true
    },
    "files": [
        "accessList.ts",
        "accessMonitoringRule.ts",
        "app.ts",
        "authPreference.ts",
        "autoupdateConfig.ts",
        "autoupdateVersion.ts",
        "bot.ts",
        "clusterMaintenanceConfig.ts",
        "clusterNetworkingConfig.ts",
        "config/index.ts",
        "config/vars.ts",
        "database.ts",
        "dynamicWindowsDesktop.ts",
        "getAccessList.ts",
        "getAccessMonitoringRule.ts",
        "getApp.ts",
        "getAuthPreference.ts",
        "getAutoupdateConfig.ts",
        "getAutoupdateVersion.ts",
        "getClusterMaintenanceConfig.ts",
        "getClusterNetworkingConfig.ts",
        "getDatabase.ts",
        "getDynamicWindowsDesktop.ts",
        "getGithubConnector.ts",
        "getInstaller.ts",
        "getLoginRule.ts",
        "getOidcConnector.ts",
        "getOktaImportRule.ts",
        "getProvisionToken.ts",
        "getRole.ts",
        "getSamlConnector.ts",
        "getSessionRecordingConfig.ts",
        "getStaticHostUser.ts",
        "getTrustedCluster.ts",
        "getTrustedDevice.ts",
        "getUser.ts",
        "getWorkloadIdentity.ts",
        "githubConnector.ts",
        "index.ts",
        "installer.ts",
        "loginRule.ts",
        "oidcConnector.ts",
        "oktaImportRule.ts",
        "provider.ts",
        "provisionToken.ts",
        "role.ts",
        "samlConnector.ts",
        "server.ts",
        "sessionRecordingConfig.ts",
        "staticHostUser.ts",
        "trustedCluster.ts",
        "trustedDevice.ts",
        "types/index.ts",
        "types/input.ts",
        "types/output.ts",
        "user.ts",
        "utilities.ts",
        "workloadIdentity.ts"
    ]
}
