// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getAccessList(args?: GetAccessListArgs, opts?: pulumi.InvokeOptions): Promise<GetAccessListResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("teleport:index/getAccessList:getAccessList", {
        "header": args.header,
        "spec": args.spec,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getAccessList.
 */
export interface GetAccessListArgs {
    header?: inputs.GetAccessListHeader;
    spec?: inputs.GetAccessListSpec;
}

/**
 * A collection of values returned by getAccessList.
 */
export interface GetAccessListResult {
    readonly header?: outputs.GetAccessListHeader;
    readonly id: string;
    readonly spec?: outputs.GetAccessListSpec;
}
export function getAccessListOutput(args?: GetAccessListOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetAccessListResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("teleport:index/getAccessList:getAccessList", {
        "header": args.header,
        "spec": args.spec,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getAccessList.
 */
export interface GetAccessListOutputArgs {
    header?: pulumi.Input<inputs.GetAccessListHeaderArgs>;
    spec?: pulumi.Input<inputs.GetAccessListSpecArgs>;
}
